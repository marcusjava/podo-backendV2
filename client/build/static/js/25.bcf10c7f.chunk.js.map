{"version":3,"sources":["pages/Client/Charts.jsx","components/Chart/index.jsx"],"names":["RangePicker","DatePicker","Select","Option","Charts","useState","selectedDate","setSelectedDate","data","setData","onSearch","a","params","startDate","dayjs","format","endDate","axios","get","response","span","bordered","style","marginTop","ref","node","value","onChange","dates","type","icon","onClick","Chart","config","width","height","autoFit","xField","yField","point","size","shape","label","fill"],"mappings":"oSAQQA,EAAgBC,IAAhBD,YACWE,IAAXC,OAuDOC,UArDf,WAAmB,IAAD,EACwBC,mBAAS,IADjC,mBACTC,EADS,KACKC,EADL,OAEQF,mBAAS,IAFjB,mBAETG,EAFS,KAEHC,EAFG,KAMVC,EAAQ,uCAAG,8BAAAC,EAAA,6DACTC,EAAS,CACbC,UAAWC,IAAMR,EAAa,IAAIS,OAAO,cACzCC,QAASF,IAAMR,EAAa,IAAIS,OAAO,eAH1B,SAMQE,IAAMC,IAAI,yBAA0B,CACzDN,WAPa,OAMTO,EANS,OASfV,EAAQU,EAASX,MATF,2CAAH,qDAYd,OACE,kBAAC,IAAD,CAAKY,KAAM,IACT,kBAAC,IAAD,CAAMC,UAAU,GACd,kBAAC,IAAD,CAAKC,MAAO,CAAEC,UAAW,KACvB,kBAAC,IAAD,CAAKH,KAAM,IACT,kBAAC,IAAD,KACE,kBAACpB,EAAD,CACEwB,IAAK,SAACC,GACUA,GAEhBC,MAAOpB,EACPS,OAAO,aACPY,SAAU,SAACC,GAAD,OAAWrB,EAAgBqB,MAGvC,kBAAC,IAAD,CACEC,KAAK,UACLC,KAAM,kBAAC,IAAD,MACNC,QAASrB,GAHX,gBAUN,kBAAC,IAAD,CAAKY,MAAO,CAAEC,UAAW,MACvB,kBAAC,IAAD,CAAKH,KAAM,IACT,kBAAC,IAAD,CAAOZ,KAAMA,U,iCCxDzB,6BA0BewB,IArBf,YAA0B,IAClBC,EAAS,CACbzB,KAFqB,EAARA,KAGb0B,MAAO,IACPC,OAAQ,IACRC,SAAS,EACTC,OAAQ,MACRC,OAAQ,QACRC,MAAO,CACLC,KAAM,EACNC,MAAO,WAETC,MAAO,CACLpB,MAAO,CACLqB,KAAM,UAIZ,OAAO,kBAAC,IAAWV","file":"static/js/25.bcf10c7f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card, DatePicker, Button, Select, Space } from \"antd\";\nimport Chart from \"../../components/Chart\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\n// import { Container } from './styles';\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nfunction Charts() {\n  const [selectedDate, setSelectedDate] = useState([]);\n  const [data, setData] = useState([]);\n\n  let searchInput = null;\n\n  const onSearch = async () => {\n    const params = {\n      startDate: dayjs(selectedDate[0]).format(\"YYYY-MM-DD\"),\n      endDate: dayjs(selectedDate[1]).format(\"YYYY-MM-DD\"),\n    };\n\n    const response = await axios.get(\"/clients/stats/clients\", {\n      params,\n    });\n    setData(response.data);\n  };\n\n  return (\n    <Col span={16}>\n      <Card bordered={false}>\n        <Row style={{ marginTop: 50 }}>\n          <Col span={16}>\n            <Space>\n              <RangePicker\n                ref={(node) => {\n                  searchInput = node;\n                }}\n                value={selectedDate}\n                format=\"DD/MM/YYYY\"\n                onChange={(dates) => setSelectedDate(dates)}\n              />\n\n              <Button\n                type=\"primary\"\n                icon={<SearchOutlined />}\n                onClick={onSearch}\n              >\n                Pesquisar\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: 150 }}>\n          <Col span={16}>\n            <Chart data={data} />\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Charts;\n","import React from \"react\";\nimport { Column } from \"@ant-design/charts\";\n\n// import { Container } from './styles';\n\nfunction Chart({ data }) {\n  const config = {\n    data,\n    width: 800,\n    height: 400,\n    autoFit: true,\n    xField: \"_id\",\n    yField: \"count\",\n    point: {\n      size: 5,\n      shape: \"diamond\",\n    },\n    label: {\n      style: {\n        fill: \"#aaa\",\n      },\n    },\n  };\n  return <Column {...config} />;\n}\n\nexport default Chart;\n"],"sourceRoot":""}